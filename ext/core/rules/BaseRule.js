// ext/core/rules/BaseRule.js - –ë–∞–∑–æ–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ—Ä–æ–≤

/**
 * BaseRule - –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö –ø—Ä–∞–≤–∏–ª –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ—Ä–æ–≤
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–±—â—É—é –ª–æ–≥–∏–∫—É –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–Ω—ã —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤—Å–µ –ø—Ä–∞–≤–∏–ª–∞
 */
export class BaseRule {
  constructor(config = {}) {
    this.name = "–ë–∞–∑–æ–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ";
    this.description = "–ë–∞–∑–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –≤—Å–µ—Ö –ø—Ä–∞–≤–∏–ª";

    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    this.config = {
      minState: 0,           // –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑—Ä—è–¥–∞
      maxState: 9,           // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑—Ä—è–¥–∞
      minSteps: 1,           // –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤
      maxSteps: 3,           // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤
      allowedActions: [],    // –†–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è (–±—É–¥—É—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞—Ö)
      forbiddenActions: [],  // –ó–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
      digitCount: 1,         // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑—Ä—è–¥–æ–≤ (1=–æ–¥–Ω–æ–∑–Ω–∞—á–Ω—ã–µ, 2=–¥–≤—É–∑–Ω–∞—á–Ω—ã–µ –∏ —Ç.–¥.)
      combineLevels: false,  // –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–∑—Ä—è–¥—ã –≤ –ø—Ä–∏–º–µ—Ä–∞—Ö
      ...config
    };
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∞–ª–∏–¥–Ω—ã–º
   * @param {number|number[]} state - –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ (—á–∏—Å–ª–æ –∏–ª–∏ –º–∞—Å—Å–∏–≤ —Ä–∞–∑—Ä—è–¥–æ–≤)
   * @returns {boolean}
   */
  isValidState(state) {
    // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ legacy —Ñ–æ—Ä–º–∞—Ç–∞ (–æ–¥–Ω–æ —á–∏—Å–ª–æ)
    if (typeof state === 'number') {
      return state >= this.config.minState && state <= this.config.maxState;
    }

    // –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç (–º–∞—Å—Å–∏–≤ —Ä–∞–∑—Ä—è–¥–æ–≤)
    if (Array.isArray(state)) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–∞–∂–¥—ã–π —Ä–∞–∑—Ä—è–¥ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 0-9
      return state.every(digit =>
        digit >= this.config.minState && digit <= this.config.maxState
      );
    }

    return false;
  }

  /**
   * –ü—Ä–∏–º–µ–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é
   * @param {number|number[]} state - –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (—á–∏—Å–ª–æ –∏–ª–∏ –º–∞—Å—Å–∏–≤ —Ä–∞–∑—Ä—è–¥–æ–≤)
   * @param {number|Object} action - –î–µ–π—Å—Ç–≤–∏–µ (—á–∏—Å–ª–æ –¥–ª—è legacy, {position, value} –¥–ª—è multi-digit)
   * @returns {number|number[]} - –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
   */
  applyAction(state, action) {
    // Legacy —Ñ–æ—Ä–º–∞—Ç: –æ–¥–Ω–æ —á–∏—Å–ª–æ + –ø—Ä–æ—Å—Ç–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
    if (typeof state === 'number' && typeof action === 'number') {
      return state + action;
    }

    // –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç: –º–∞—Å—Å–∏–≤ —Ä–∞–∑—Ä—è–¥–æ–≤ + –¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–∑–∏—Ü–∏–µ–π
    if (Array.isArray(state) && typeof action === 'object' && action !== null) {
      const { position, value } = action;
      const newState = [...state];
      newState[position] = (newState[position] || 0) + value;
      return newState;
    }

    // –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞—Ç –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º state –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    console.error('‚ö†Ô∏è –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç applyAction:', { state, action });
    return state;
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
   * @param {number|number[]} currentState - –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (—á–∏—Å–ª–æ –∏–ª–∏ –º–∞—Å—Å–∏–≤ —Ä–∞–∑—Ä—è–¥–æ–≤)
   * @param {boolean} isFirstAction - –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–º –¥–µ–π—Å—Ç–≤–∏–µ–º
   * @param {number} position - –î–ª—è multi-digit: –ø–æ–∑–∏—Ü–∏—è —Ä–∞–∑—Ä—è–¥–∞ (0=–µ–¥–∏–Ω–∏—Ü—ã, 1=–¥–µ—Å—è—Ç–∫–∏ –∏ —Ç.–¥.)
   * @returns {Array<number|Object>} - –ú–∞—Å—Å–∏–≤ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
   */
  getAvailableActions(currentState, isFirstAction = false, position = 0) {
    const actions = [];

    for (const action of this.config.allowedActions) {
      if (this.isValidAction(currentState, action, position)) {
        actions.push(action);
      }
    }

    return actions;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –≤–∞–ª–∏–¥–Ω—ã–º –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
   * @param {number|number[]} currentState - –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
   * @param {number|Object} action - –î–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   * @param {number} position - –î–ª—è multi-digit: –ø–æ–∑–∏—Ü–∏—è —Ä–∞–∑—Ä—è–¥–∞
   * @returns {boolean}
   */
  isValidAction(currentState, action, position = 0) {
    // Legacy —Ñ–æ—Ä–º–∞—Ç: –ø—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    if (typeof action === 'number') {
      // –ü—Ä–æ–≤–µ—Ä–∫–∞: –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ –∑–∞–ø—Ä–µ—â–µ–Ω–æ
      if (this.config.forbiddenActions.includes(action)) {
        return false;
      }

      // –ü—Ä–æ–≤–µ—Ä–∫–∞: —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã
      const newState = this.applyAction(currentState, action);
      if (!this.isValidState(newState)) {
        return false;
      }

      return true;
    }

    // –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç: –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å —É—á–µ—Ç–æ–º –ø–æ–∑–∏—Ü–∏–∏
    if (typeof action === 'object' && action !== null) {
      const newState = this.applyAction(currentState, action);
      if (!this.isValidState(newState)) {
        return false;
      }

      return true;
    }

    return false;
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
   * @returns {number|number[]} - –ß–∏—Å–ª–æ –∏–ª–∏ –º–∞—Å—Å–∏–≤ —Ä–∞–∑—Ä—è–¥–æ–≤ (–≤—Å–µ 0)
   */
  generateStartState() {
    const { digitCount } = this.config;

    // Legacy —Ñ–æ—Ä–º–∞—Ç: –æ–¥–Ω–æ —á–∏—Å–ª–æ
    if (digitCount === 1) {
      return 0;
    }

    // –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç: –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ N-—Ä–∞–∑—Ä—è–¥–Ω–æ–µ —á–∏—Å–ª–æ
    const minNumber = this.getMinFinalNumber();
    const maxNumber = this.getMaxFinalNumber();

    // –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ [minNumber, maxNumber]
    const randomNumber = Math.floor(Math.random() * (maxNumber - minNumber + 1)) + minNumber;

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —á–∏—Å–ª–æ –≤ –º–∞—Å—Å–∏–≤ —Ä–∞–∑—Ä—è–¥–æ–≤ [units, tens, hundreds, ...]
    const state = new Array(digitCount).fill(0);
    let num = randomNumber;
    for (let i = 0; i < digitCount; i++) {
      state[i] = num % 10;
      num = Math.floor(num / 10);
    }

    console.log(`üé≤ –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: ${randomNumber} ‚Üí [${state.join(', ')}]`);
    return state;
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤
   * @returns {number}
   */
  generateStepsCount() {
    const { minSteps, maxSteps } = this.config;
    return Math.floor(Math.random() * (maxSteps - minSteps + 1)) + minSteps;
  }

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
   * @param {number|Object} action - –î–µ–π—Å—Ç–≤–∏–µ
   * @returns {string} - –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "+2" –∏–ª–∏ "-1")
   */
  formatAction(action) {
    // Legacy —Ñ–æ—Ä–º–∞—Ç
    if (typeof action === 'number') {
      return action > 0 ? `+${action}` : `${action}`;
    }

    // –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç: {position, value}
    if (typeof action === 'object' && action !== null) {
      const { position, value } = action;
      const sign = value > 0 ? '+' : '';
      return `${sign}${value}`;
    }

    return String(action);
  }

  /**
   * Helper: –ø–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —Ä–∞–∑—Ä—è–¥–∞ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
   * @param {number|number[]} state - –°–æ—Å—Ç–æ—è–Ω–∏–µ
   * @param {number} position - –ü–æ–∑–∏—Ü–∏—è —Ä–∞–∑—Ä—è–¥–∞ (0=–µ–¥–∏–Ω–∏—Ü—ã, 1=–¥–µ—Å—è—Ç–∫–∏ –∏ —Ç.–¥.)
   * @returns {number} - –ó–Ω–∞—á–µ–Ω–∏–µ —Ä–∞–∑—Ä—è–¥–∞ (0-9)
   */
  getDigitValue(state, position = 0) {
    if (typeof state === 'number') {
      return position === 0 ? state : 0;
    }
    if (Array.isArray(state)) {
      return state[position] || 0;
    }
    return 0;
  }

  /**
   * Helper: –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ —á–∏—Å–ª–æ
   * @param {number|number[]} state - –°–æ—Å—Ç–æ—è–Ω–∏–µ
   * @returns {number} - –ß–∏—Å–ª–æ
   */
  stateToNumber(state) {
    if (typeof state === 'number') {
      return state;
    }
    if (Array.isArray(state)) {
      // [units, tens, hundreds] -> —á–∏—Å–ª–æ
      return state.reduce((sum, digit, index) => sum + digit * Math.pow(10, index), 0);
    }
    return 0;
  }

  /**
   * Helper: –ø–æ–ª—É—á–∏—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ
   * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑—Ä—è–¥–æ–≤ –æ—Ç 1 –¥–æ 9
   * @returns {number}
   */
  getMinFinalNumber() {
    const { digitCount } = this.config;

    if (digitCount === 1) {
      return 0;
    }

    // –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ N-–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ (–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç combineLevels):
    // digitCount=2: 10, digitCount=3: 100, digitCount=4: 1000, ..., digitCount=9: 100000000
    return Math.pow(10, digitCount - 1);
  }

  /**
   * Helper: –ø–æ–ª—É—á–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ
   * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑—Ä—è–¥–æ–≤ –æ—Ç 1 –¥–æ 9
   * @returns {number}
   */
  getMaxFinalNumber() {
    const { digitCount } = this.config;

    if (digitCount === 1) {
      return 9;
    }

    // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ N-–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ:
    // digitCount=2: 99, digitCount=3: 999, digitCount=4: 9999, ..., digitCount=9: 999999999
    return Math.pow(10, digitCount) - 1;
  }
}
